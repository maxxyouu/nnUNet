# run the following code in case you see the triton GPU compiler too old [NOTE: ONLY RUN THIS IF THERE IS A ERROR BEING PROMPTED IN THE TERMINAL, IN THE LAB]
export nnUNet_compile=f

# REFER THE FOLLOWING LINK TO SET UP THE ENV VARIABLES TO LOCATE THE DATA
https://github.com/MIC-DKFZ/nnUNet/blob/master/documentation/set_environment_variables.md

# [IN THE LAB]
ssh maxyou@titania.sri.utoronto.ca
export nnUNet_raw="/home/maxyou/nnunet_parent/nnUNet_raw"
export nnUNet_preprocessed="/home/maxyou/nnunet_parent/nnUNet_preprocessed"
export nnUNet_results="/home/maxyou/nnunet_parent/nnUNet_results"

# [IN THE HOME COMPUTER - Command Prompt]
set nnUNet_raw=C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet_raw
set nnUNet_preprocessed=C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet_preprocessed
set nnUNet_results=C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet_results

# check the following for installation instruction
https://github.com/MIC-DKFZ/nnUNet/blob/master/documentation/installation_instructions.md

# run the following command to get the fingerprint, plan, and etc [NOTE: MOST LIKELY ONLY NEED TO BE RAN ONCE]
# and run it with 
cd C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet\nnunetv2\experiment_planning
python plan_and_preprocess_entrypoints.py -d 11 -pl nnUNetPlannerResEncM

# run the following command [NOTE: EVERYTIME YOU WANT TO HAVE TO TRAIN A NEW MODEL]
# go to the parent directory of the run_training class, then run the following commands
# make sure it is in the conda enviroment as the ******pip install -e .****** command is ran in the base conda env. activate base conda env before proceeding

cd C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet\nnunetv2\run
python run_training.py 11 3d_fullres 0 -tr nnUNetTrainer_100epochsSaveEvery5Epochs -p nnUNetResEncUNetMPlans

python run_training.py 11 3d_fullres 0 -tr nnUNetTrainer_100epochsSaveEvery5EpochsWithAdditionalIntensityAugmentation -p nnUNetResEncUNetMPlans
python run_training.py 11 3d_fullres 0 -tr nnUNetTrainer_100epochsSaveEvery5EpochsWithAdditionalIntensityAugmentationPositiveSlope -p nnUNetResEncUNetMPlans
python run_training.py 11 3d_fullres 0 -tr nnUNetTrainer_100epochsSaveEvery5EpochsWithAdditionalIntensityAugmentationNegativeSlope -p nnUNetResEncUNetMPlans
python run_training.py 11 3d_fullres 0 -tr nnUNetTrainer_100epochsSaveEvery5EpochsWithOnlyIntensityAugmentation -p nnUNetResEncUNetMPlans

# for inference, run the following

go to the predict_from_raw_data.py file, adjust the paths, and run the script (note that that depends on the env variables set in the paths.py file)

## note the following script does not work 
nnUNetv2_predict -i 'C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet_raw\Dataset011_GE\imagesTs\' -o 'C:\Users\MaxYo\OneDrive\Desktop\nnunet_parent\nnUNet_results\nnUNet_Prediction_Results\Dataset011_GE\nnUNetTrainer_100epochsSaveEvery5Epochs__nnUNetResEncUNetMPlans__3d_fullres\' -d 11 -tr nnUNetTrainer_100epochsSaveEvery5Epochs -c 3d_fullres